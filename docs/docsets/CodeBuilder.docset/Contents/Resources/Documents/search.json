{"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV6access9isMutable4name4type5valueAcA6AccessO_SbS3SSgtcfc":{"name":"init(access:isMutable:name:type:value:)","abstract":"<p>Creates a Stored Property instance.</p>","parent_name":"StoredProperty"},"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV6accessAA6AccessOvp":{"name":"access","abstract":"<p>Access level of the property</p>","parent_name":"StoredProperty"},"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV9isMutableSbvp":{"name":"isMutable","abstract":"<p>Bool flag that determines if the property is a <code>let</code> or <code>var</code></p>","parent_name":"StoredProperty"},"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV4nameSSvp":{"name":"name","abstract":"<p>The property&rsquo;s name</p>","parent_name":"StoredProperty"},"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV4typeSSvp":{"name":"type","abstract":"<p>The property&rsquo;s type</p>","parent_name":"StoredProperty"},"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV5valueSSSgvp":{"name":"value","abstract":"<p>The property&rsquo;s default value</p>","parent_name":"StoredProperty"},"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV13renderContentSSyF":{"name":"renderContent()","abstract":"<p>The SingleLineFragment as a String. It is the content appended with a newline.</p>","parent_name":"StoredProperty"},"Structs/StoredProperty.html#/s:11CodeBuilder14StoredPropertyV10asArgumentAA0F0Vvp":{"name":"asArgument","abstract":"<p>Transforms this StoredProperty instance into an Argument instance</p>","parent_name":"StoredProperty"},"Structs/SingleLineFragment.html#/s:11CodeBuilder18SingleLineFragmentV7contentSSvp":{"name":"content","abstract":"<p>The content of this SingleLineFragment</p>","parent_name":"SingleLineFragment"},"Structs/SingleLineFragment.html#/s:11CodeBuilder18SingleLineFragmentVyACSScfc":{"name":"init(_:)","abstract":"<p>A SingleLineFragment tepresents a single line of Swift code</p>","parent_name":"SingleLineFragment"},"Structs/SingleLineFragment.html#/s:11CodeBuilder18SingleLineFragmentV13renderContentSSyF":{"name":"renderContent()","abstract":"<p>The SingleLineFragment as a String. It is the content appended with a newline.</p>","parent_name":"SingleLineFragment"},"Structs/Parameter.html#/s:11CodeBuilder9ParameterV4name13documentationACSS_SStcfc":{"name":"init(name:documentation:)","abstract":"<p>Standard initializer.</p>","parent_name":"Parameter"},"Structs/Parameter.html#/s:11CodeBuilder9ParameterV4nameSSvp":{"name":"name","abstract":"<p>The name of the parameter</p>","parent_name":"Parameter"},"Structs/Parameter.html#/s:11CodeBuilder9ParameterV13documentationSSvp":{"name":"documentation","abstract":"<p>The documentation that describes the parameter</p>","parent_name":"Parameter"},"Structs/Parameter.html#/s:11CodeBuilder9ParameterV13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Renders this Parameter as a string.</p>","parent_name":"Parameter"},"Structs/ForEach.html#/s:11CodeBuilder7ForEachVyACyxGx_AA0A13Representable_p7ElementQzctcfc":{"name":"init(_:_:)","abstract":"<p>Initializer</p>","parent_name":"ForEach"},"Structs/ForEach.html#/s:11CodeBuilder7ForEachV8elementsxvp":{"name":"elements","abstract":"<p>A collection of elements to be iterated on</p>","parent_name":"ForEach"},"Structs/ForEach.html#/s:11CodeBuilder7ForEachV7builderyAA0A13Representable_p7ElementQzcvp":{"name":"builder","abstract":"<p>The closure executed on each element that produces a CodeRepresentable</p>","parent_name":"ForEach"},"Structs/ForEach.html#/s:11CodeBuilder7ForEachV02asA0AA0A0Ovp":{"name":"asCode","abstract":"<p>The CodeRepresentables created by the builder are joined together with line breaks in between</p>","parent_name":"ForEach"},"Structs/File.html#/s:11CodeBuilder4FileV4name6indent4bodyACSS_SSAA0A13Representable_pyXEtcfc":{"name":"init(name:indent:body:)","abstract":"<p>Creates a File instance which represents a Swift file that will be created</p>","parent_name":"File"},"Structs/File.html#/s:11CodeBuilder4FileV4nameSSvp":{"name":"name","abstract":"<p>The name of the Swift file</p>","parent_name":"File"},"Structs/File.html#/s:11CodeBuilder4FileV6indentSSvp":{"name":"indent","abstract":"<p>The string used for indenting Swift code</p>","parent_name":"File"},"Structs/File.html#/s:11CodeBuilder4FileV4date10Foundation4DateVvp":{"name":"date","abstract":"<p>The current date at the creation of this instance</p>","parent_name":"File"},"Structs/File.html#/s:11CodeBuilder4FileV4codeAA0A0Ovp":{"name":"code","abstract":"<p>The body of the Swift file</p>","parent_name":"File"},"Structs/File.html#/s:s23CustomStringConvertibleP11descriptionSSvp":{"name":"description","parent_name":"File"},"Structs/File.html#/s:11CodeBuilder4FileV6stringSSvp":{"name":"string","abstract":"<p>A String representation of the File&rsquo;s code content</p>","parent_name":"File"},"Structs/File.html#/s:11CodeBuilder4FileV5write2toySS_tKF":{"name":"write(to:)","abstract":"<p>Creates/overwrites a Swift file at the given path. Throws if there is an error encountered during the I/O operation</p>","parent_name":"File"},"Structs/Enum.html#/s:11CodeBuilder4EnumV4nameSSvp":{"name":"name","abstract":"<p>The name of the enum definition</p>","parent_name":"Enum"},"Structs/Enum.html#/s:11CodeBuilder4EnumV5casesSayAA07MixableC4Case_pGvp":{"name":"cases","abstract":"<p>The cases of the enum</p>","parent_name":"Enum"},"Structs/RawValueEnum.html#/s:11CodeBuilder12RawValueEnumV4name5casesACyxGSS_SayAA0cdE4CaseVyxGGtcfc":{"name":"init(name:cases:)","abstract":"<p>Creates a RawValueEnum instance which represents a Swift raw value enum definition</p>","parent_name":"RawValueEnum"},"Structs/RawValueEnum.html#/s:11CodeBuilder12RawValueEnumV4nameSSvp":{"name":"name","abstract":"<p>The name of the enum definition</p>","parent_name":"RawValueEnum"},"Structs/RawValueEnum.html#/s:11CodeBuilder12RawValueEnumV16typeDeescriptionSSvp":{"name":"typeDeescription","abstract":"<p>The String representation of the raw value type of the enum</p>","parent_name":"RawValueEnum"},"Structs/RawValueEnum.html#/s:11CodeBuilder12RawValueEnumV5casesSayAA0cdE4CaseVyxGGvp":{"name":"cases","abstract":"<p>The cases of the enum</p>","parent_name":"RawValueEnum"},"Structs/AssociatedValueEnumCase.html#/s:11CodeBuilder23AssociatedValueEnumCaseV4nameSSvp":{"name":"name","abstract":"<p>The name of the enum case</p>","parent_name":"AssociatedValueEnumCase"},"Structs/AssociatedValueEnumCase.html#/s:11CodeBuilder23AssociatedValueEnumCaseV5typesSaySSGvp":{"name":"types","abstract":"<p>The associated value data types of the enum case</p>","parent_name":"AssociatedValueEnumCase"},"Structs/AssociatedValueEnumCase.html#/s:11CodeBuilder23AssociatedValueEnumCaseV13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Renders this AssociatedValueEnumCase as a string.</p>","parent_name":"AssociatedValueEnumCase"},"Structs/RawValueEnumCase.html#/s:11CodeBuilder16RawValueEnumCaseV4nameSSvp":{"name":"name","abstract":"<p>The name of the enum case</p>","parent_name":"RawValueEnumCase"},"Structs/RawValueEnumCase.html#/s:11CodeBuilder16RawValueEnumCaseV5valuexSgvp":{"name":"value","abstract":"<p>The rawValue of the enum case</p>","parent_name":"RawValueEnumCase"},"Structs/RawValueEnumCase.html#/s:11CodeBuilder16RawValueEnumCaseV13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Renders this RawValueEnumCase as a string.</p>","parent_name":"RawValueEnumCase"},"Structs/NormalEnumCase.html#/s:11CodeBuilder14NormalEnumCaseV4nameSSvp":{"name":"name","abstract":"<p>The name of the enum case</p>","parent_name":"NormalEnumCase"},"Structs/NormalEnumCase.html#/s:11CodeBuilder14NormalEnumCaseV13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Renders this NormalEnumCase as a string.</p>","parent_name":"NormalEnumCase"},"Structs/CodeBuilder.html#/s:11CodeBuilderAAV10buildBlockyAA0A0OAA0A13Representable_pd_tFZ":{"name":"buildBlock(_:)","abstract":"<p>Undocumented</p>","parent_name":"CodeBuilder"},"Structs/Argument.html#/s:11CodeBuilder8ArgumentV4nameSSvp":{"name":"name","abstract":"<p>Name of the argument</p>","parent_name":"Argument"},"Structs/Argument.html#/s:11CodeBuilder8ArgumentV4typeSSvp":{"name":"type","abstract":"<p>A text representation of the function argument type</p>","parent_name":"Argument"},"Structs/Argument.html#/s:11CodeBuilder8ArgumentV11asParameter13documentationAA0E0VSS_tF":{"name":"asParameter(documentation:)","abstract":"<p>Undocumented</p>","parent_name":"Argument"},"Structs/Argument.html#/s:11CodeBuilder8ArgumentV13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Renders this Argument as a string.</p>","parent_name":"Argument"},"Structs/Argument.html":{"name":"Argument","abstract":"<p>A Fragment formatted as an argument</p>"},"Structs/CodeBuilder.html":{"name":"CodeBuilder","abstract":"<p>Undocumented</p>"},"Structs/NormalEnumCase.html":{"name":"NormalEnumCase","abstract":"<p>A Fragment that is rendered as a normal enum case</p>"},"Structs/RawValueEnumCase.html":{"name":"RawValueEnumCase","abstract":"<p>A Fragment that is rendered as a raw value enum case</p>"},"Structs/AssociatedValueEnumCase.html":{"name":"AssociatedValueEnumCase","abstract":"<p>A Fragment that is rendered as an enum case with an associated value</p>"},"Structs/RawValueEnum.html":{"name":"RawValueEnum","abstract":"<p>Represents a Swift raw value enum definition</p>"},"Structs/Enum.html":{"name":"Enum","abstract":"<p>Represents an enum definition</p>"},"Structs/File.html":{"name":"File","abstract":"<p>A Swift file</p>"},"Structs/ForEach.html":{"name":"ForEach","abstract":"<p>A struct that enables interation through a collection.</p>"},"Structs/Parameter.html":{"name":"Parameter","abstract":"<p>Represents a parameter documentation in the proper format</p>"},"Structs/SingleLineFragment.html":{"name":"SingleLineFragment","abstract":"<p>SingleLineFragment represents a single line of Swift code</p>"},"Structs/StoredProperty.html":{"name":"StoredProperty","abstract":"<p>StoredProperty represents the code that defines a property of a Swift data structure</p>"},"Protocols/Fragment.html#/s:11CodeBuilder8FragmentP13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Generates a String representation of the Swift code represented by this Fragment</p>","parent_name":"Fragment"},"Protocols/Fragment.html#/s:11CodeBuilder0A13RepresentableP02asA0AA0A0Ovp":{"name":"asCode","parent_name":"Fragment"},"Protocols/EnumCase.html#/s:11CodeBuilder8EnumCaseP4nameSSvp":{"name":"name","abstract":"<p>Undocumented</p>","parent_name":"EnumCase"},"Protocols/CodeRepresentable.html#/s:11CodeBuilder0A13RepresentableP02asA0AA0A0Ovp":{"name":"asCode","abstract":"<p>A representation of this CodeRepresentable instance as a Code case</p>","parent_name":"CodeRepresentable"},"Protocols/CodeRepresentable.html":{"name":"CodeRepresentable","abstract":"<p>A type that represents a piece of Swift code</p>"},"Protocols/EnumCase.html":{"name":"EnumCase","abstract":"<p>A Fragment that is formatted as an enum case</p>"},"Protocols.html#/s:11CodeBuilder15MixableEnumCaseP":{"name":"MixableEnumCase","abstract":"<p>A protocol adopted by NormalEnumCase and AssociatedValueEnumCase to ensure type safety</p>"},"Protocols/Fragment.html":{"name":"Fragment","abstract":"<p>Represents a line or block of Swift code</p>"},"Functions.html#/s:11CodeBuilder20computedPropertySpec_6access8isStatic11returnValue_AA0A13Representable_pSS_AA6AccessOSbSSAaF_pyXEtF":{"name":"computedPropertySpec(_:access:isStatic:returnValue:_:)","abstract":"<p>Creates a Fragment formatted specifically for Swift computed properties</p>"},"Functions.html#/s:11CodeBuilder15controlFlowSpecyAA0A13Representable_pSS_AaC_pyXEtF":{"name":"controlFlowSpec(_:_:)","abstract":"<p>Creates a Fragment formatted specifically for Swift control flow statements</p>"},"Functions.html#/s:11CodeBuilder10elseIfSpecyAA0A13Representable_pSS_AaC_pyXEtF":{"name":"elseIfSpec(_:_:)","abstract":"<p>Creates a Fragment formatted specifically for <code>else if</code> Swift control flow statements</p>"},"Functions.html#/s:11CodeBuilder8elseSpecyAA0A13Representable_pAaC_pyXEF":{"name":"elseSpec(_:)","abstract":"<p>Creates a Fragment formatted specifically for <code>else</code> Swift control flow statements</p>"},"Functions.html#/s:11CodeBuilder9guardSpec10statements9elseBlockAA0A13Representable_pAaE_pyXE_AaE_pyXEtF":{"name":"guardSpec(statements:elseBlock:)","abstract":"<p>Creates a Fragment formatted specifically for <code>guard</code> Swift control flow statements</p>"},"Functions.html#/s:11CodeBuilder6doSpecyAA0A13Representable_pAaC_pyXEF":{"name":"doSpec(_:)","abstract":"<p>Creates a Fragment formatted specifically for <code>do</code> Swift control flow statements</p>"},"Functions.html#/s:11CodeBuilder9catchSpec9statement_AA0A13Representable_pSSSg_AaD_pyXEtF":{"name":"catchSpec(statement:_:)","abstract":"<p>Creates a Fragment formatted specifically for <code>catch</code> Swift control flow statements</p>"},"Functions.html#/s:11CodeBuilder17documentationSpec_6format10parameters7returns3tagAA0A13Representable_pSS_AA13DocumentationC6FormatOSayAA9ParameterVGSSSgAOtF":{"name":"documentationSpec(_:format:parameters:returns:tag:)","abstract":"<p>Create a CodeFragment formatted for documentation</p>"},"Functions.html#/s:11CodeBuilder8fileSpec0C4Name6indent_AA4FileVSS_SSAA0A13Representable_pyXEtF":{"name":"fileSpec(fileName:indent:_:)","abstract":"<p>Creates a File that represents the Swift code built from the Fragments.</p>"},"Functions.html#/s:11CodeBuilder12functionSpec_6access8isStatic11throwsError16genericSignature9arguments11returnValue_AA0A13Representable_pSS_AA6AccessOS2bSSSgSayAA8ArgumentVGAlaI_pyXEtF":{"name":"functionSpec(_:access:isStatic:throwsError:genericSignature:arguments:returnValue:_:)","abstract":"<p>Creates a Fragment formatted specifically for Swift functions</p>"},"Functions.html#/s:11CodeBuilder9statementyAA8Fragment_pSSF":{"name":"statement(_:)","abstract":"<p>Creates a SingleLineFragment out of a String</p>"},"Functions.html#/s:11CodeBuilder9lineBreakAA8Fragment_pyF":{"name":"lineBreak()","abstract":"<p>Adds a line break</p>"},"Functions.html#/s:11CodeBuilder3endAA8Fragment_pyF":{"name":"end()","abstract":"<p>Ends scope</p>"},"Functions.html#/s:11CodeBuilder15initializerSpec6access13documentation9arguments_AA0A13Representable_pAA6AccessO_AA13DocumentationCSgSayAA8ArgumentVGAaF_pyXEtF":{"name":"initializerSpec(access:documentation:arguments:_:)","abstract":"<p>Creates a Fragment formatted specifically as an initializer.</p>"},"Functions.html#/s:11CodeBuilder15initializerSpec6access13documentation9argumentsAA0A13Representable_pAA6AccessO_AA13DocumentationCSgSayAA8ArgumentVGtF":{"name":"initializerSpec(access:documentation:arguments:)","abstract":"<p>Creates a Fragment formatted specifically as an initializer with no custom body other than assigning arguments.</p>"},"Functions.html#/s:11CodeBuilder7rawSpecyAA0A13Representable_pSSF":{"name":"rawSpec(_:)","abstract":"<p>Transforms the String into SingleLineFragments and wraps the array in a Code.fragments enum case.</p>"},"Functions.html#/s:11CodeBuilder8typeSpec_6access0C014inheritingFrom_AA0A13Representable_pSS_AA6AccessOAA8DataTypeOSaySSGAaF_pyXEtF":{"name":"typeSpec(_:access:type:inheritingFrom:_:)","abstract":"<p>Creates a Fragment formatted specifically for defining a Swift type</p>"},"Functions.html#/s:11CodeBuilder9classSpec_6access14inheritingFrom_AA0A13Representable_pSS_AA6AccessOSaySSGAaE_pyXEtF":{"name":"classSpec(_:access:inheritingFrom:_:)","abstract":"<p>Creates a Fragment formatted specifically for defining a Swift class type</p>"},"Functions.html#/s:11CodeBuilder10structSpec_6access14inheritingFrom_AA0A13Representable_pSS_AA6AccessOSaySSGAaE_pyXEtF":{"name":"structSpec(_:access:inheritingFrom:_:)","abstract":"<p>Creates a Fragment formatted specifically for defining a Swift class type</p>"},"Functions.html#/s:11CodeBuilder8enumSpec6accessAB14inheritingFrom_AA0A13Representable_pAA6AccessO_AA4EnumVSaySSGAaE_pyXEtF":{"name":"enumSpec(access:enumSpec:inheritingFrom:_:)","abstract":"<p>Creates a Fragment formatted specifically for defining a Swift enum type with either normal enum cases, associated value cases, or both</p>"},"Functions.html#/s:11CodeBuilder16rawValueEnumSpec6access04enumF014inheritingFrom_AA0A13Representable_pAA6AccessO_AA03RawdE0VyxGSaySSGAaF_pyXEtlF":{"name":"rawValueEnumSpec(access:enumSpec:inheritingFrom:_:)","abstract":"<p>Creates a Fragment formatted specifically for defining a Swift raw value enum</p>"},"Extensions/String.html#/s:SS11CodeBuilderE_7builderS2S_AA0A0OyXEtcfc":{"name":"init(_:builder:)","abstract":"<p>Creates a String instance using the Fragments created from the builder closure</p>","parent_name":"String"},"Extensions/Array.html#/s:Sa11CodeBuilderAA0A13Representable_pRszlE02asA0AA0A0Ovp":{"name":"asCode","abstract":"<p>Transforms this Array into a Code.fragments instance that transforms each element into a [Fragment] instance","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/String.html":{"name":"String"},"Enums/Access.html#/s:11CodeBuilder6AccessO4openyA2CmF":{"name":"open","abstract":"<p>Undocumented</p>","parent_name":"Access"},"Enums/Access.html#/s:11CodeBuilder6AccessO6publicyA2CmF":{"name":"public","abstract":"<p>Undocumented</p>","parent_name":"Access"},"Enums/Access.html#/s:11CodeBuilder6AccessO8internalyA2CmF":{"name":"internal","abstract":"<p>Undocumented</p>","parent_name":"Access"},"Enums/Access.html#/s:11CodeBuilder6AccessO11fileprivateyA2CmF":{"name":"fileprivate","abstract":"<p>Undocumented</p>","parent_name":"Access"},"Enums/Access.html#/s:11CodeBuilder6AccessO7privateyA2CmF":{"name":"private","abstract":"<p>Undocumented</p>","parent_name":"Access"},"Enums/DataType.html#/s:11CodeBuilder8DataTypeO5classyA2CmF":{"name":"class","abstract":"<p>Undocumented</p>","parent_name":"DataType"},"Enums/DataType.html#/s:11CodeBuilder8DataTypeO4enumyA2CmF":{"name":"enum","abstract":"<p>Undocumented</p>","parent_name":"DataType"},"Enums/DataType.html#/s:11CodeBuilder8DataTypeO6structyA2CmF":{"name":"struct","abstract":"<p>Undocumented</p>","parent_name":"DataType"},"Enums/Code.html#/s:11CodeBuilder0A0O8fragmentyAcA8Fragment_pcACmF":{"name":"fragment(_:)","abstract":"<p>A Fragment</p>","parent_name":"Code"},"Enums/Code.html#/s:11CodeBuilder0A0O9fragmentsyACSayAA8Fragment_pGcACmF":{"name":"fragments(_:)","abstract":"<p>Several Fragments</p>","parent_name":"Code"},"Enums/Code.html#/s:11CodeBuilder0A0O9fragmentsSayAA8Fragment_pGvp":{"name":"fragments","abstract":"<p>Code as an array of Fragments</p>","parent_name":"Code"},"Enums/Code.html#/s:11CodeBuilder0A13RepresentableP02asA0AA0A0Ovp":{"name":"asCode","parent_name":"Code"},"Enums/Code.html":{"name":"Code","abstract":"<p>An enum that can unify a single Fragment and an array of Fragments into one type</p>"},"Enums/DataType.html":{"name":"DataType","abstract":"<p>A data structure type</p>"},"Enums/Access.html":{"name":"Access","abstract":"<p>The access level modifiers available in Swift expressed as an enum</p>"},"Classes/MultiLineFragment.html#/s:11CodeBuilder17MultiLineFragmentC7contentSSvp":{"name":"content","abstract":"<p>The content of the MultiLineFragment</p>","parent_name":"MultiLineFragment"},"Classes/MultiLineFragment.html#/s:11CodeBuilder17MultiLineFragmentC8childrenSayAA0E0_pGvp":{"name":"children","abstract":"<p>The CodeFragmentType instances that will be indented in a newline below this MultiLineFragment&rsquo;s content</p>","parent_name":"MultiLineFragment"},"Classes/MultiLineFragment.html#/s:11CodeBuilder17MultiLineFragmentC6parentACSgvp":{"name":"parent","abstract":"<p>The parent of this MultiCodeFragment, if there is one. Helps determine the level of indentation needed to render","parent_name":"MultiLineFragment"},"Classes/MultiLineFragment.html#/s:11CodeBuilder17MultiLineFragmentC6indentSSvp":{"name":"indent","abstract":"<p>The string used to prefix the content of the String rendered by this MultiLineFragment</p>","parent_name":"MultiLineFragment"},"Classes/MultiLineFragment.html#/s:11CodeBuilder17MultiLineFragmentCyACSS_AA0A13Representable_pyXEtcfc":{"name":"init(_:_:)","abstract":"<p>A MultiLineFragment represents a multiple lines of Swift code</p>","parent_name":"MultiLineFragment"},"Classes/MultiLineFragment.html#/s:11CodeBuilder8FragmentP13renderContentSSyF":{"name":"renderContent()","parent_name":"MultiLineFragment"},"Classes/GroupFragment.html#/s:11CodeBuilder13GroupFragmentC8childrenAcA0A13Representable_p_tcfc":{"name":"init(children:)","abstract":"<p>Creates a GroupFragment using a CodeRepresentable instance</p>","parent_name":"GroupFragment"},"Classes/GroupFragment.html#/s:11CodeBuilder13GroupFragmentC13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Undocumented</p>","parent_name":"GroupFragment"},"Classes/Documentation/Format.html#/s:11CodeBuilder13DocumentationC6FormatO10singleLineyA2EmF":{"name":"singleLine","abstract":"<p>Formats documentation with a &ldquo;///&rdquo; prefix</p>","parent_name":"Format"},"Classes/Documentation/Format.html#/s:11CodeBuilder13DocumentationC6FormatO9multilineyA2EmF":{"name":"multiline","abstract":"<p>Formats documentation with /** &hellip;</p>","parent_name":"Format"},"Classes/Documentation.html#/s:11CodeBuilder13DocumentationC6formatAC6FormatOvp":{"name":"format","abstract":"<p>The formatting used to render this documentation. Either single line or multiline.</p>","parent_name":"Documentation"},"Classes/Documentation.html#/s:11CodeBuilder13DocumentationC_6format_ACSS_AC6FormatOAA0A13Representable_pyXEtcfc":{"name":"init(_:format:_:)","abstract":"<p>Creates a MultilineFragment formatted specifically like documentation</p>","parent_name":"Documentation"},"Classes/Documentation.html#/s:11CodeBuilder13DocumentationC13renderContentSSyF":{"name":"renderContent()","abstract":"<p>Renders this Documentation as a string.</p>","parent_name":"Documentation"},"Classes/Documentation/Format.html":{"name":"Format","abstract":"<p>An enum representing the two types of documentation formatting</p>","parent_name":"Documentation"},"Classes/Documentation.html":{"name":"Documentation","abstract":"<p>A MultilineFragment rendered specifically as documentation</p>"},"Classes/GroupFragment.html":{"name":"GroupFragment","abstract":"<p>A MultilineFragment that groups its children at the same indent level</p>"},"Classes/MultiLineFragment.html":{"name":"MultiLineFragment","abstract":"<p>A MultiLineFragment represents a multiple lines of Swift code where the children are indented under its content</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}